{
  "swagger": "2.0",
  "info": {
    "title": "Infonova API Swagger",
    "version": ""
  },
  "host": "localhost:9700",
  "basePath": "/r6-api",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/{tenant}/authorization/v1/accountManagementGroups": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/accountManagementGroups",
        "description": "GET /authorization/v1/accountManagementGroups",
        "operationId": "getAuthorizationV1AccountManagementGroups",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/accountManagementGroups",
        "description": "POST /authorization/v1/accountManagementGroups",
        "operationId": "postAuthorizationV1AccountManagementGroups",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/accountManagementGroups/{name}",
        "description": "GET /authorization/v1/accountManagementGroups/{name}",
        "operationId": "getAuthorizationV1AccountManagementGroupsName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/accountManagementGroups/{name}",
        "description": "PUT /authorization/v1/accountManagementGroups/{name}",
        "operationId": "putAuthorizationV1AccountManagementGroupsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/accountManagementGroups/{name}",
        "description": "PATCH /authorization/v1/accountManagementGroups/{name}",
        "operationId": "patchAuthorizationV1AccountManagementGroupsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}/customerAccounts": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/accountManagementGroups/{name}/customerAccounts",
        "description": "GET /authorization/v1/accountManagementGroups/{name}/customerAccounts",
        "operationId": "getAuthorizationV1AccountManagementGroupsNameCustomerAccounts",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupCustomerAccountList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/accountManagementGroups/{name}/customerAccounts",
        "description": "POST /authorization/v1/accountManagementGroups/{name}/customerAccounts",
        "operationId": "postAuthorizationV1AccountManagementGroupsNameCustomerAccounts",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupCustomerAccount"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupCustomerAccount"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}/customerAccounts/{customerAccount}": {
      "delete": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "DELETE /authorization/v1/accountManagementGroups/{name}/customerAccounts/{customerAccount}",
        "description": "DELETE /authorization/v1/accountManagementGroups/{name}/customerAccounts/{customerAccount}",
        "operationId": "deleteAuthorizationV1AccountManagementGroupsNameCustomerAccountsCustomerAccount",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerAccount",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupCustomerAccount"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}/relationships": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/accountManagementGroups/{name}/relationships",
        "description": "GET /authorization/v1/accountManagementGroups/{name}/relationships",
        "operationId": "getAuthorizationV1AccountManagementGroupsNameRelationships",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupRelationshipList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/accountManagementGroups/{name}/relationships",
        "description": "POST /authorization/v1/accountManagementGroups/{name}/relationships",
        "operationId": "postAuthorizationV1AccountManagementGroupsNameRelationships",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupRelationship"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupRelationship"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}/relationships/{relatedAccountManagementGroupName}": {
      "delete": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "DELETE /authorization/v1/accountManagementGroups/{name}/relationships/{relatedAccountManagementGroupName}",
        "description": "DELETE /authorization/v1/accountManagementGroups/{name}/relationships/{relatedAccountManagementGroupName}",
        "operationId": "deleteAuthorizationV1AccountManagementGroupsNameRelationshipsRelatedAccountManagementGroupName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relatedAccountManagementGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupRelationship"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/accountManagementGroups/{name}/users": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/accountManagementGroups/{name}/users",
        "description": "GET /authorization/v1/accountManagementGroups/{name}/users",
        "operationId": "getAuthorizationV1AccountManagementGroupsNameUsers",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupUserList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/customerAccountUserRoles": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/customerAccountUserRoles",
        "description": "GET /authorization/v1/customerAccountUserRoles",
        "operationId": "getAuthorizationV1CustomerAccountUserRoles",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRoleList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/customerAccountUserRoles",
        "description": "PUT /authorization/v1/customerAccountUserRoles",
        "operationId": "putAuthorizationV1CustomerAccountUserRoles",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRoles"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/customerAccountUserRoles",
        "description": "POST /authorization/v1/customerAccountUserRoles",
        "operationId": "postAuthorizationV1CustomerAccountUserRoles",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/customerAccountUserRoles/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/customerAccountUserRoles/{name}",
        "description": "GET /authorization/v1/customerAccountUserRoles/{name}",
        "operationId": "getAuthorizationV1CustomerAccountUserRolesName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/customerAccountUserRoles/{name}",
        "description": "PUT /authorization/v1/customerAccountUserRoles/{name}",
        "operationId": "putAuthorizationV1CustomerAccountUserRolesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/customerAccountUserRoles/{name}",
        "description": "PATCH /authorization/v1/customerAccountUserRoles/{name}",
        "operationId": "patchAuthorizationV1CustomerAccountUserRolesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/evaluatePermissions": {
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/evaluatePermissions",
        "description": "POST /authorization/v1/evaluatePermissions",
        "operationId": "postAuthorizationV1EvaluatePermissions",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissionTypes",
            "in": "query",
            "description": "Comma-separated list of permission types to filter the resulting permissions for.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "permissions",
            "in": "query",
            "description": "Comma-separated list of permissions to filter the resulting permissions for.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionEvaluation"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainEvaluatedPermissions"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissionParameterDefinitions": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissionParameterDefinitions",
        "description": "GET /authorization/v1/permissionParameterDefinitions",
        "operationId": "getAuthorizationV1PermissionParameterDefinitions",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinitionList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissionParameterDefinitions",
        "description": "PUT /authorization/v1/permissionParameterDefinitions",
        "operationId": "putAuthorizationV1PermissionParameterDefinitions",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinitions"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/permissionParameterDefinitions",
        "description": "POST /authorization/v1/permissionParameterDefinitions",
        "operationId": "postAuthorizationV1PermissionParameterDefinitions",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissionParameterDefinitions/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissionParameterDefinitions/{name}",
        "description": "GET /authorization/v1/permissionParameterDefinitions/{name}",
        "operationId": "getAuthorizationV1PermissionParameterDefinitionsName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissionParameterDefinitions/{name}",
        "description": "PUT /authorization/v1/permissionParameterDefinitions/{name}",
        "operationId": "putAuthorizationV1PermissionParameterDefinitionsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/permissionParameterDefinitions/{name}",
        "description": "PATCH /authorization/v1/permissionParameterDefinitions/{name}",
        "operationId": "patchAuthorizationV1PermissionParameterDefinitionsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissionTypes": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissionTypes",
        "description": "GET /authorization/v1/permissionTypes",
        "operationId": "getAuthorizationV1PermissionTypes",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionTypeList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissionTypes",
        "description": "PUT /authorization/v1/permissionTypes",
        "operationId": "putAuthorizationV1PermissionTypes",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionTypes"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/permissionTypes",
        "description": "POST /authorization/v1/permissionTypes",
        "operationId": "postAuthorizationV1PermissionTypes",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissionTypes/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissionTypes/{name}",
        "description": "GET /authorization/v1/permissionTypes/{name}",
        "operationId": "getAuthorizationV1PermissionTypesName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissionTypes/{name}",
        "description": "PUT /authorization/v1/permissionTypes/{name}",
        "operationId": "putAuthorizationV1PermissionTypesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/permissionTypes/{name}",
        "description": "PATCH /authorization/v1/permissionTypes/{name}",
        "operationId": "patchAuthorizationV1PermissionTypesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissions": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissions",
        "description": "GET /authorization/v1/permissions",
        "operationId": "getAuthorizationV1Permissions",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissionList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissions",
        "description": "PUT /authorization/v1/permissions",
        "operationId": "putAuthorizationV1Permissions",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermissions"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/permissions",
        "description": "POST /authorization/v1/permissions",
        "operationId": "postAuthorizationV1Permissions",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/permissions/{id}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/permissions/{id}",
        "description": "GET /authorization/v1/permissions/{id}",
        "operationId": "getAuthorizationV1PermissionsId",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/permissions/{id}",
        "description": "PUT /authorization/v1/permissions/{id}",
        "operationId": "putAuthorizationV1PermissionsId",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/permissions/{id}",
        "description": "PATCH /authorization/v1/permissions/{id}",
        "operationId": "patchAuthorizationV1PermissionsId",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/roles": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/roles",
        "description": "GET /authorization/v1/roles",
        "operationId": "getAuthorizationV1Roles",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRoleList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/roles",
        "description": "PUT /authorization/v1/roles",
        "operationId": "putAuthorizationV1Roles",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRoles"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/roles",
        "description": "POST /authorization/v1/roles",
        "operationId": "postAuthorizationV1Roles",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/roles/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/roles/{name}",
        "description": "GET /authorization/v1/roles/{name}",
        "operationId": "getAuthorizationV1RolesName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/roles/{name}",
        "description": "PUT /authorization/v1/roles/{name}",
        "operationId": "putAuthorizationV1RolesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/roles/{name}",
        "description": "PATCH /authorization/v1/roles/{name}",
        "operationId": "patchAuthorizationV1RolesName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainRole"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/workGroups": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/workGroups",
        "description": "GET /authorization/v1/workGroups",
        "operationId": "getAuthorizationV1WorkGroups",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroupList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/workGroups",
        "description": "PUT /authorization/v1/workGroups",
        "operationId": "putAuthorizationV1WorkGroups",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keepExisting",
            "in": "query",
            "description": "If the keepExisting parameter is set to false, the not referenced objects will be deleted",
            "required": true,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroups"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "POST /authorization/v1/workGroups",
        "description": "POST /authorization/v1/workGroups",
        "operationId": "postAuthorizationV1WorkGroups",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/authorization/v1/workGroups/{name}": {
      "get": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "GET /authorization/v1/workGroups/{name}",
        "description": "GET /authorization/v1/workGroups/{name}",
        "operationId": "getAuthorizationV1WorkGroupsName",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PUT /authorization/v1/workGroups/{name}",
        "description": "PUT /authorization/v1/workGroups/{name}",
        "operationId": "putAuthorizationV1WorkGroupsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authorization v1"
        ],
        "summary": "PATCH /authorization/v1/workGroups/{name}",
        "description": "PATCH /authorization/v1/workGroups/{name}",
        "operationId": "patchAuthorizationV1WorkGroupsName",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "CommonsDomainModelArgument": {
      "type": "object",
      "properties": {
        "argument": {
          "type": "string"
        },
        "argumentDescription": {
          "type": "string"
        },
        "argumentKey": {
          "type": "string"
        },
        "subMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelMessage"
          }
        }
      }
    },
    "CommonsDomainModelLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "CommonsDomainModelMessage": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelArgument"
          }
        },
        "key": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        }
      }
    },
    "CommonsDomainModelMessageAware": {
      "type": "object",
      "properties": {
        "logId": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelMessage"
          }
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroup": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "lockedForNewCustomerAccounts": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupCustomerAccount": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "customerAccount": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupCustomerAccountList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupCustomerAccount"
          }
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroup"
          }
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupRelationship": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "relatedAccountManagementGroupName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupRelationshipList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupRelationship"
          }
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupUser": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainAccountManagementGroupUserList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainAccountManagementGroupUser"
          }
        }
      }
    },
    "SecurityAuthorizationDomainEvaluatedPermissions": {
      "type": "object",
      "properties": {
        "customerAccountPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prospectAccountPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermission": {
      "type": "object",
      "properties": {
        "configurationLevel": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameter"
          }
        },
        "parent": {
          "type": "string"
        },
        "tenantGroup": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainPermissionEvaluation": {
      "type": "object",
      "properties": {
        "customerAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "effectiveWorkgroups": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "prospectAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissionList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissionParameter": {
      "type": "object",
      "properties": {
        "characterValue": {
          "type": "string"
        },
        "configurationLevel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "numericValue": {
          "type": "string",
          "format": "number"
        },
        "tenantGroup": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainPermissionParameterDefinition": {
      "type": "object",
      "properties": {
        "configurationLevel": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tenantGroup": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainPermissionParameterDefinitionList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissionParameterDefinitions": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermissionParameterDefinition"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissionType": {
      "type": "object",
      "properties": {
        "configurationLevel": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tenantGroup": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainPermissionTypeList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissionTypes": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermissionType"
          }
        }
      }
    },
    "SecurityAuthorizationDomainPermissions": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainPermission"
          }
        }
      }
    },
    "SecurityAuthorizationDomainRole": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "configurationLevel": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "enum": [
            "Wholesale",
            "Retail"
          ]
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenantGroup": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainRoleList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainRole"
          }
        }
      }
    },
    "SecurityAuthorizationDomainRoles": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainRole"
          }
        }
      }
    },
    "SecurityAuthorizationDomainWorkGroup": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "configurationLevel": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenantGroup": {
          "type": "string"
        }
      }
    },
    "SecurityAuthorizationDomainWorkGroupList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
          }
        }
      }
    },
    "SecurityAuthorizationDomainWorkGroups": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAuthorizationDomainWorkGroup"
          }
        }
      }
    },
    "UserV1DomainCustomerAccountUserRole": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "workGroup": {
          "type": "string"
        }
      }
    },
    "UserV1DomainCustomerAccountUserRoleList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
          }
        }
      }
    },
    "UserV1DomainCustomerAccountUserRoles": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserV1DomainCustomerAccountUserRole"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2ClientCredentialAuthentication": {
      "type": "oauth2",
      "description": "Client credentials flow configuration for the Infonova Keycloak.",
      "flow": "application",
      "tokenUrl": ""
    },
    "oauth2ResourceOwnerPasswordCredentialAuthentication": {
      "type": "oauth2",
      "description": "Resource Owner Password Credentials flow configuration for the Infonova Keycloak.",
      "flow": "password",
      "tokenUrl": ""
    }
  },
  "tags": [
    {
      "name": "Authorization v1",
      "externalDocs": {
        "description": "Further documentation",
        "url": "http://localhost:9700/r6-api/docs/authorization-impl/index.html"
      }
    }
  ]
}