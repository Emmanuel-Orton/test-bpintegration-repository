{
  "swagger": "2.0",
  "info": {
    "title": "Infonova API Swagger",
    "version": ""
  },
  "host": "localhost:9700",
  "basePath": "/r6-api",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/{tenant}/productInventory/v1/products": {
      "get": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "GET /productInventory/v1/products",
        "description": "GET /productInventory/v1/products",
        "operationId": "getProductInventoryV1Products",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of a chunk. Defaults to 50 if not supplied.",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter properties",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The requested page of the result. Defaults to 1 if not supplied.",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of a page. Defaults to 50 if not supplied.",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query. Supported properties are billingAccount,productOffering,displayName,searchableServiceCharacteristicValues,searchableResourceCharacteristicValues,searchableServiceCharacteristics,searchableResourceCharacteristics,id,state,completenessState,parameters.*,parent.",
            "required": false,
            "type": "string",
            "format": "Lucene syntax is supported",
            "allowEmptyValue": false
          },
          {
            "name": "scroll",
            "in": "query",
            "description": "If set to true, requests a result containing a `scrollId` to continue scrolling through the result.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "The requested scroll id to continue scrolling through the result. Ignored if not provided.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by billingAccount,productOffering,displayName,searchableServiceCharacteristicValues,searchableResourceCharacteristicValues,searchableServiceCharacteristics,searchableResourceCharacteristics,id,state,completenessState,adjustedInvoiceText,serviceIdentifiers,activation",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Must be 'asc' or 'desc'.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProductList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/productInventory/v1/products/{product}": {
      "get": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "GET /productInventory/v1/products/{product}",
        "description": "GET /productInventory/v1/products/{product}",
        "operationId": "getProductInventoryV1ProductsProduct",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProduct"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "PUT /productInventory/v1/products/{product}",
        "description": "PUT /productInventory/v1/products/{product}",
        "operationId": "putProductInventoryV1ProductsProduct",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProduct"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "PATCH /productInventory/v1/products/{product}",
        "description": "PATCH /productInventory/v1/products/{product}",
        "operationId": "patchProductInventoryV1ProductsProduct",
        "consumes": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProduct"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/productInventory/v1/products/{product}/changes": {
      "get": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "GET /productInventory/v1/products/{product}/changes",
        "description": "GET /productInventory/v1/products/{product}/changes",
        "operationId": "getProductInventoryV1ProductsProductChanges",
        "produces": [
          "application/json",
          "application/vnd.infonova.r6+json"
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter properties",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query. Supported properties are eventDefinition,current.name,current.id. A temporal restriction can be provided using the query properties from, to and period.",
            "required": false,
            "type": "string",
            "format": "Lucene syntax is not supported",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by timestamp,current.name",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Must be 'asc' or 'desc'.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProductinventoryV1DomainProductChangeList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    },
    "/{tenant}/productInventory/v1/products/{product}/retire": {
      "post": {
        "tags": [
          "Product Inventory v1"
        ],
        "summary": "POST /productInventory/v1/products/{product}/retire",
        "description": "POST /productInventory/v1/products/{product}/retire",
        "operationId": "postProductInventoryV1ProductsProductRetire",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/CommonsDomainModelMessageAware"
            }
          }
        },
        "security": [
          {
            "oauth2ClientCredentialAuthentication": [

            ]
          },
          {
            "oauth2ResourceOwnerPasswordCredentialAuthentication": [

            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "CommonsDomainModelArgument": {
      "type": "object",
      "properties": {
        "argument": {
          "type": "string"
        },
        "argumentDescription": {
          "type": "string"
        },
        "argumentDisplayName": {
          "type": "string"
        },
        "argumentKey": {
          "type": "string"
        },
        "subMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelMessage"
          }
        },
        "templateVariable": {
          "type": "string"
        }
      }
    },
    "CommonsDomainModelLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "CommonsDomainModelMessage": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelArgument"
          }
        },
        "key": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CommonsDomainModelMessageAware": {
      "type": "object",
      "properties": {
        "logId": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonsDomainModelMessage"
          }
        }
      }
    },
    "CommonsTimeInterval": {
      "type": "object",
      "properties": {
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PartyV1DomainContactMedium": {
      "type": "object",
      "properties": {
        "contactMedium": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "postalAddress": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        },
        "telephoneNumber": {
          "$ref": "#/definitions/PartyV1DomainTelephoneNumber"
        },
        "type": {
          "type": "string",
          "enum": [
            "Email",
            "TelephoneNumber",
            "PostalAddress",
            "Other"
          ]
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        }
      }
    },
    "PartyV1DomainRelatedParty": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "contactMedium": {
          "$ref": "#/definitions/PartyV1DomainContactMedium"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "party": {
          "type": "string",
          "format": "uuid"
        },
        "primary": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PartyV1DomainTelephoneNumber": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Mobile",
            "FixedLine"
          ]
        }
      }
    },
    "ProductinventoryV1DomainProduct": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "activation": {
          "type": "string",
          "format": "date-time"
        },
        "adjustedInvoiceText": {
          "type": "string"
        },
        "billingAccount": {
          "type": "string"
        },
        "bundle": {
          "type": "boolean"
        },
        "completenessState": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "productCharacteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProductCharacteristic"
          }
        },
        "productOffering": {
          "type": "string"
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProductRelationship"
          }
        },
        "relatedParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyV1DomainRelatedParty"
          }
        },
        "resourceRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainResourceRelationship"
          }
        },
        "retired": {
          "type": "boolean"
        },
        "searchableResourceCharacteristicValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchableResourceCharacteristics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "searchableServiceCharacteristicValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchableServiceCharacteristics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "serviceIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainServiceRelationship"
          }
        },
        "state": {
          "type": "string"
        },
        "termination": {
          "type": "string",
          "format": "date-time"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        },
        "wholesale": {
          "type": "boolean"
        },
        "wholesaleAgreement": {
          "type": "boolean"
        }
      }
    },
    "ProductinventoryV1DomainProductAndProductinventoryV1DomainProductCharacteristic": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "activation": {
          "type": "string",
          "format": "date-time"
        },
        "adjustedInvoiceText": {
          "type": "string"
        },
        "billingAccount": {
          "type": "string"
        },
        "bundle": {
          "type": "boolean"
        },
        "completenessState": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "productCharacteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProductCharacteristic"
          }
        },
        "productOffering": {
          "type": "string"
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProductRelationship"
          }
        },
        "relatedParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyV1DomainRelatedParty"
          }
        },
        "resourceRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainResourceRelationship"
          }
        },
        "retired": {
          "type": "boolean"
        },
        "searchableResourceCharacteristicValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchableResourceCharacteristics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "searchableServiceCharacteristicValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchableServiceCharacteristics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "serviceIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRelationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainServiceRelationship"
          }
        },
        "state": {
          "type": "string"
        },
        "termination": {
          "type": "string",
          "format": "date-time"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        },
        "wholesale": {
          "type": "boolean"
        },
        "wholesaleAgreement": {
          "type": "boolean"
        }
      }
    },
    "ProductinventoryV1DomainProductChange": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "current": {
          "$ref": "#/definitions/ProductinventoryV1DomainProductAndProductinventoryV1DomainProductCharacteristic"
        },
        "eventDefinition": {
          "type": "string"
        },
        "previous": {
          "$ref": "#/definitions/ProductinventoryV1DomainProductAndProductinventoryV1DomainProductCharacteristic"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductinventoryV1DomainProductChangeList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProductChange"
          }
        }
      }
    },
    "ProductinventoryV1DomainProductCharacteristic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        }
      }
    },
    "ProductinventoryV1DomainProductList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductinventoryV1DomainProduct"
          }
        },
        "paginationInformation": {
          "type": "object",
          "properties": {
            "pageSize": {
              "type": "integer"
            },
            "totalNumberOfRecords": {
              "type": "integer"
            }
          }
        },
        "scrollingInformation": {
          "type": "object",
          "properties": {
            "chunkSize": {
              "type": "integer"
            },
            "scrollId": {
              "type": "string"
            },
            "totalNumberOfRecords": {
              "type": "number"
            }
          }
        }
      }
    },
    "ProductinventoryV1DomainProductRelationship": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "product": {
          "type": "string"
        },
        "relatedProduct": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        }
      }
    },
    "ProductinventoryV1DomainResourceRelationship": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "product": {
          "type": "string"
        },
        "relatedResource": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        }
      }
    },
    "ProductinventoryV1DomainServiceRelationship": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommonsDomainModelLink"
          }
        },
        "product": {
          "type": "string"
        },
        "relatedService": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "validFor": {
          "$ref": "#/definitions/CommonsTimeInterval"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2ClientCredentialAuthentication": {
      "type": "oauth2",
      "description": "Client credentials flow configuration for the Infonova Keycloak.",
      "flow": "application",
      "tokenUrl": ""
    },
    "oauth2ResourceOwnerPasswordCredentialAuthentication": {
      "type": "oauth2",
      "description": "Resource Owner Password Credentials flow configuration for the Infonova Keycloak.",
      "flow": "password",
      "tokenUrl": ""
    }
  },
  "tags": [
    {
      "name": "Product Inventory v1",
      "externalDocs": {
        "description": "Further documentation",
        "url": "http://localhost:9700/r6-api/docs/product-inventory-impl/index.html"
      }
    }
  ]
}